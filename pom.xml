<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>nl.agileprof.mod</groupId>
	<artifactId>mod</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>${project.artifactId}</name>

	<properties>
		<!-- We schrijven uiteraard Java 6 broncode -->
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>

		<!-- We gebruiken de volgende versies -->
		<version.log4j>1.2.17</version.log4j>
		<version.junit>4.11</version.junit>
		<version.hamcrest>1.3</version.hamcrest>
		<version.hibernate>4.2.7.Final</version.hibernate>
		<version.hibernate-jpa>1.0.1.Final</version.hibernate-jpa>
		<version.commons-lang>2.4</version.commons-lang>
		<version.wicket>6.16.0</version.wicket>

		<version.slf4j>1.7.5</version.slf4j>

		<!-- We doen alles in UTF-8 -->
		<default.encoding>UTF-8</default.encoding>
		<project.build.sourceEncoding>${default.encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${default.encoding}</project.reporting.outputEncoding>

		<!-- In JavaEE6 is de web deployment descriptor niet meer verplicht -->
		<failOnMissingWebXml>false</failOnMissingWebXml>

		<!-- Gegenereerde code niet meenemen in de Sonar analyse -->
		<!-- <sonar.exclusions>nl/belastingdienst/ied/generated/**,
			nl/belastingdienst/ied/**/entity/*Builder.java,
			nl/belastingdienst/ess/**, nl/belastingdienst/ied/util/**,
			org/w3/_2001/xmlschema/**, nl/belastingdienst/ied/web/**,
			nl/belastingdienst/sbf/**, com/sap/**</sonar.exclusions> -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${version.log4j}</version>
			</dependency>

			<!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- Wicket -->
			<!-- <dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-core</artifactId>
				<version>${version.wicket}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-auth-roles</artifactId>
				<version>${version.wicket}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-cdi</artifactId>
				<version>${version.wicket}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-extensions</artifactId>
				<version>${version.wicket}</version>
			</dependency> -->

			<!-- <dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>17.0</version>
			</dependency> -->

			<!-- De verschillende specs uit JavaEE6 spec die we gebruiken. De scope 
				is "provided" omdat deze API in een JavaEE6 compliant container (zoals WAS8) 
				netjes in de runtime is ingebakken. -->
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-ejb_3.1_spec</artifactId>
				<version>1.0.2</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jcdi_1.0_spec</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jpa_2.0_spec</artifactId>
				<version>1.1</version>
				<scope>provided</scope>
			</dependency>

			<!-- <dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jaxrpc_1.1_spec</artifactId>
				<version>1.1</version>
			</dependency> -->

			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-atinject_1.0_spec</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- <dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jms_1.1_spec</artifactId>
				<version>1.1.1</version>
				<scope>provided</scope>
			</dependency> -->

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${version.commons-lang}</version>
			</dependency>

			<!-- Test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${version.hamcrest}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.9.5</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>mod-core</module>
		<module>mod-shared-domain-entities</module>
		<module>mod-domain-services</module>
		<module>mod-business</module>
		<module>mod-web</module>
		<module>mod-ear</module>
		<module>mod-ear-webapp</module>
	</modules>

</project>